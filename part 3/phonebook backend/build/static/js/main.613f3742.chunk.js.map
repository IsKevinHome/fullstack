{"version":3,"sources":["components/Person.js","components/AddContact.js","components/SearchContacts.js","components/RenderContacts.js","services/contacts.js","App.js","index.js"],"names":["Person","person","deletePerson","name","number","AddContact","addContact","newName","newNumber","handleContactNameChange","handleContactNumberChange","onSubmit","value","onChange","type","SearchContacts","filterBy","handleFiltering","RenderContacts","renderContacts","baseUrl","contactService","getAll","axios","get","create","newObject","post","update","id","put","remove","delete","then","response","data","App","useState","contacts","setContacts","setNewName","setNewNumber","showAll","setShowAll","setFilterBy","useEffect","console","log","length","event","target","preventDefault","checkContact","forEach","contact","alert","contactObject","concat","filter","c","toUpperCase","search","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.613f3742.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Person = ({ person, deletePerson }) => {\n    return (\n        <li>\n            {person.name} {person.number}\n            {/* <button onClick={deletePerson}>delete</button> */}\n        </li>\n    );\n};\n\nexport default Person;\n","import React from \"react\";\nconst AddContact = ({ addContact, newName, newNumber, handleContactNameChange, handleContactNumberChange }) => {\n    return (\n        <div>\n            <h2>Add a new</h2>\n\n            <form onSubmit={addContact}>\n                <div>\n                    name: <input value={newName} onChange={handleContactNameChange} />\n                </div>\n                <div>\n                    number: <input value={newNumber} onChange={handleContactNumberChange} />\n                </div>\n                <div>\n                    <button type=\"submit\">add</button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default AddContact;\n","import React from \"react\";\n\nconst SearchContacts = ({ filterBy, handleFiltering }) => {\n    return (\n        <div>\n            <h3>Filter:</h3>\n            <input value={filterBy} onChange={handleFiltering} />\n        </div>\n    );\n};\n\nexport default SearchContacts;\n","import React from \"react\";\n\nconst RenderContacts = ({ renderContacts }) => {\n    return (\n        <div>\n            <h2>Contacts</h2>\n            <ul>{renderContacts}</ul>\n        </div>\n    );\n};\n\nexport default RenderContacts;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n    return axios.get(baseUrl);\n};\n\nconst create = (newObject) => {\n    return axios.post(baseUrl, newObject);\n};\n\nconst update = (id, newObject) => {\n    return axios.put(`${baseUrl}/${id}`, newObject);\n};\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`);\n    return request.then((response) => response.data);\n};\n\nconst contactService = {\n    getAll,\n    create,\n    update,\n    remove,\n};\n\nexport default contactService;\n","import React, { useState, useEffect } from \"react\";\nimport Person from \"./components/Person\";\nimport AddContact from \"./components/AddContact\";\nimport SearchContacts from \"./components/SearchContacts\";\nimport RenderContacts from \"./components/RenderContacts\";\nimport contactService from \"./services/contacts\";\n\nconst App = () => {\n    const [contacts, setContacts] = useState([]);\n    const [newName, setNewName] = useState(\"\");\n    const [newNumber, setNewNumber] = useState(\"\");\n    const [showAll, setShowAll] = useState(true);\n    const [filterBy, setFilterBy] = useState(\"\");\n\n    useEffect(() => {\n        contactService.getAll().then((response) => {\n            setContacts(response.data);\n        });\n    }, []);\n\n    console.log(\"render\", contacts.length, \"contacts\");\n\n    const handleContactNameChange = (event) => {\n        setNewName(event.target.value);\n    };\n\n    const handleContactNumberChange = (event) => {\n        setNewNumber(event.target.value);\n    };\n\n    const handleFiltering = (event) => {\n        setFilterBy(event.target.value);\n        setShowAll(false);\n    };\n\n    //  ALL OF THE ABOVE ARE STATE AND EVENT HANDLERS, THEY STAY INSIDE OUR FUNCTION.\n\n    const addContact = (event) => {\n        event.preventDefault();\n        if (newName === \"\") return true;\n        if (newNumber === \"\") return true;\n\n        let checkContact = false;\n        contacts.forEach((contact) => {\n            if (contact.name === newName) checkContact = true;\n        });\n\n        if (!checkContact) {\n            const contactObject = {\n                name: newName,\n                number: newNumber,\n            };\n\n            contactService.create(contactObject).then((response) => {\n                setContacts(contacts.concat(response.data));\n                setNewName(\"\");\n                setNewNumber(\"\");\n            });\n        } else {\n            alert(`${newName} is already added to phonebook`);\n        }\n    };\n\n    const rows = () => {\n        const contactsToShow = showAll\n            ? contacts\n            : contacts.filter((contact) => {\n                  const c = contact.name.toUpperCase();\n                  const filter = filterBy.toUpperCase();\n                  return c.search(filter) !== -1;\n              });\n        const contactsRender = contactsToShow.map((contact) => {\n            console.log(contact);\n            return <Person key={contact.name} person={contact} />;\n        });\n\n        return contactsRender;\n    };\n\n    return (\n        <div>\n            <h1>Phonebook</h1>\n            <SearchContacts filterBy={filterBy} handleFiltering={handleFiltering} />\n            <AddContact\n                addContact={addContact}\n                newName={newName}\n                newNumber={newNumber}\n                handleContactNameChange={handleContactNameChange}\n                handleContactNumberChange={handleContactNumberChange}\n            />\n            <RenderContacts renderContacts={rows()} />\n        </div>\n    );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}